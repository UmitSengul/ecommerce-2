version: '3.8'


services:
  
  frontend:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"


# frontend olarak nginx çalışır. dışardaki 80 portuna gelen istekleri alır. daha sonra nginx config dosyasındaki gibi apinin 80 portuna yollar

  api:
    image: ${DOCKER_REGISTRY-}api
    build:
      context: .
      dockerfile: API/Dockerfile
    expose:
     - "80"

    depends_on:
      - postgres
    
    environment:
      - CLOUD_NAME=""
      - API_KEY=""
      - API_SECRET=""

# api kendi 80 portunu aynı  compose dosyası içindeki programlara açar

  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: store
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data

# postgres kendi 5432 portunu aynı compose dosyası içindekilere açar
